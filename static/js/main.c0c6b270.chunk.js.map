{"version":3,"sources":["components/Container.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactInputForm/ContactInputForm.styled.js","components/ContactInputForm/ContactInputForm.jsx","components/ContactsList/ListItem/StyledListItem.js","components/ContactsList/ListItem/ListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Button.jsx","App.jsx","index.js"],"names":["Container","styled","div","StyledContactFilter","ContactFilter","filter","onFilter","sendFilterQueryToApp","debounce","type","name","value","onChange","e","target","toLowerCase","trim","defaultProps","StyledSection","section","Title","h2","Section","title","children","StyledContactInputForm","form","ContactInputForm","state","phone","handleChange","setState","handleSubmit","preventDefault","props","onSubmit","resetState","this","pattern","required","Button","Component","StyledListItem","li","Contact","ContactName","span","ContactPhone","ListItem","contact","id","handleDel","icon","faUser","faPhone","onClick","StyledList","ul","ContactsList","contacts","map","button","App","initialContacts","addNewContact","newContact","prevState","find","newContactList","uid","alert","setFilter","nameToFilter","deleteContact","contactId","filteredArray","filterContacts","includes","filteredContacts","ReactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.c0c6b270.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;","import styled from \"styled-components\";\n\nexport const StyledContactFilter = styled.div`\n  background-color: aqua;\n`;","import PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\n\nimport { StyledContactFilter } from './ContactFilter.styled';\n\nconst ContactFilter = ({ filter, onFilter }) => {\n  const sendFilterQueryToApp = debounce(onFilter, 300);\n\n  const onFilterChange = e =>\n    sendFilterQueryToApp(e.target.value.toLowerCase().trim());\n\n  return (\n    <StyledContactFilter>\n      <h3>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </StyledContactFilter>\n  );\n};\n\nContactFilter.defaultProps = {\n  filter: '',\n};\n\nContactFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport { ContactFilter };\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  margin-top: 60px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  color:red;\n`;","import PropTypes from 'prop-types';\nimport { StyledSection, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <Title>{title}</Title>\n      {children}\n    </StyledSection>\n  );\n};\n\nSection.propTypes = { title: PropTypes.string, children: PropTypes.node };\n\nexport { Section };\n","import styled from 'styled-components';\n\nexport const StyledContactInputForm = styled.form `\n\n`;\n\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'components';\nimport { StyledContactInputForm } from './ContactInputForm.styled';\n\nclass ContactInputForm extends Component {\n  state = {\n    name: '',\n    phone: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetState();\n  };\n\n  resetState = () =>\n    this.setState({\n      name: '',\n      phone: '',\n    });\n\n  render() {\n    return (\n      <StyledContactInputForm onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.phone}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <Button type=\"submit\">Add</Button>\n      </StyledContactInputForm>\n    );\n  }\n}\n\nContactInputForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { ContactInputForm };\n","import styled from 'styled-components';\n\nexport const StyledListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const Contact = styled.div``;\n\nexport const ContactName = styled.span`\n  margin-right: 16px;\n`;\n\nexport const ContactPhone = styled.span`\n  margin-right: 16px;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from 'components';\n\nimport {\n  StyledListItem,\n  ContactName,\n  ContactPhone,\n  Contact,\n} from './StyledListItem';\n\nconst ListItem = ({ contact, phone, id, handleDel }) => {\n  const handleDelete = () => handleDel(id);\n\n  return (\n    <StyledListItem>\n      <Contact>\n        <ContactName>\n          <FontAwesomeIcon icon={faUser} />\n          {contact}\n        </ContactName>\n\n        <ContactPhone>\n          <FontAwesomeIcon icon={faPhone} />\n          {phone}\n        </ContactPhone>\n      </Contact>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </StyledListItem>\n  );\n};\n\nListItem.propTypes = {\n  contact: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  handleDel: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\n","import PropTypes from 'prop-types';\nimport ListItem from './ListItem/ListItem';\n\nimport { StyledList } from './ContactsList.styled';\n\nconst ContactsList = ({ contacts, handleDel }) => {\n  return (\n    <StyledList>\n      {contacts.map(contact => (\n        <ListItem\n          key={contact.id}\n          id={contact.id}\n          contact={contact.name}\n          phone={contact.phone}\n          handleDel={handleDel}\n        />\n      ))}\n    </StyledList>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDel: PropTypes.func.isRequired,\n};\n\nexport { ContactsList };\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n`;","import { Component } from 'react';\nimport { v4 as uid } from 'uuid';\n\nimport initialContacts from './data/initialContacts.json';\n\nimport {\n  ContactFilter,\n  Section,\n  ContactInputForm,\n  ContactsList,\n  Container,\n} from './components/';\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  addNewContact = newContact => {\n    this.setState(prevState => {\n      const contactNameAlreadyExist = this.state.contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      );\n\n      if (contactNameAlreadyExist) {\n        alert(`${newContact.name} is already in contacts!`);\n        return;\n      }\n\n      const newContactList = {\n        contacts: [...prevState.contacts, { ...newContact, id: uid() }],\n      };\n\n      return { ...prevState, ...newContactList };\n    });\n  };\n\n  setFilter = nameToFilter => {\n    this.setState(prevState => {\n      return { ...prevState, filter: nameToFilter };\n    });\n  };\n\n  deleteContact = contactId => {\n    const filteredArray = this.state.contacts.filter(\n      contact => contact.id !== contactId,\n    );\n    this.setState(prevState => {\n      return { ...prevState, contacts: filteredArray };\n    });\n  };\n\n  filterContacts = () =>\n    this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter),\n    );\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Container>\n            <ContactInputForm onSubmit={this.addNewContact} />\n          </Container>\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Container>\n            <ContactFilter\n              filter={this.state.filter}\n              onFilter={this.setFilter}\n            />\n\n            <ContactsList\n              contacts={filteredContacts}\n              handleDel={this.deleteContact}\n            />\n          </Container>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}
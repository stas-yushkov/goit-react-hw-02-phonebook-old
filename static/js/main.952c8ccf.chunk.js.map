{"version":3,"sources":["components/Container.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactInputForm/ContactInputForm.styled.js","components/ContactInputForm/ContactInputForm.jsx","components/ContactsList/ListItem/StyledListItem.js","components/ContactsList/ListItem/ListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Button.jsx","App.jsx","index.js"],"names":["Container","styled","div","StyledContactFilter","ContactFilter","props","sendFilterQueryToApp","debounce","onFilter","type","name","value","filter","onChange","e","target","toLowerCase","trim","StyledSection","section","Title","h2","Section","title","children","StyledContactInputForm","form","ContactInputForm","state","phone","handleChange","setState","handleSubmit","preventDefault","onSubmit","resetState","this","pattern","required","Button","Component","StyledListItem","li","Contact","ContactName","span","ContactPhone","ListItem","icon","faUser","contact","faPhone","onClick","handleDel","id","StyledList","ul","ContactsList","contacts","map","button","App","initialContacts","addNewContact","newContact","prevState","find","newContactList","uid","alert","setFilter","nameToFilter","deleteContact","contactId","filteredArray","filterContacts","includes","filteredContacts","ReactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.952c8ccf.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;","import styled from \"styled-components\";\n\nexport const StyledContactFilter = styled.div`\n  background-color: aqua;\n`;","// import React, { Component } from \"react\";\nimport debounce from 'lodash.debounce';\n\nimport { StyledContactFilter } from './ContactFilter.styled';\n\nconst ContactFilter = props => {\n  const sendFilterQueryToApp = debounce(props.onFilter, 300);\n\n  const onFilterChange = e => {\n    sendFilterQueryToApp(e.target.value.toLowerCase().trim());\n  };\n\n  return (\n    <StyledContactFilter>\n      <h3>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={props.filter}\n        onChange={onFilterChange}\n      />\n    </StyledContactFilter>\n  );\n};\n\nexport { ContactFilter };\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  margin-top: 60px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  color:red;\n`;","import React from 'react';\n\nimport { StyledSection, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <Title>{title}</Title>\n      {children}\n    </StyledSection>\n  );\n};\n\nexport { Section };\n","import styled from 'styled-components';\n\nexport const StyledContactInputForm = styled.form `\n\n`;\n\n","import React, { Component } from 'react';\n\nimport { StyledContactInputForm } from './ContactInputForm.styled';\nimport { Button } from 'components';\n\nclass ContactInputForm extends Component {\n  state = {\n    name: '',\n    phone: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({\n      name: '',\n      phone: '',\n    });\n  };\n\n  render() {\n    return (\n      <StyledContactInputForm onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.phone}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <Button type=\"submit\">Add</Button>\n      </StyledContactInputForm>\n    );\n  }\n}\n\nexport { ContactInputForm };\n","import styled from 'styled-components';\n\nexport const StyledListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const Contact = styled.div``;\n\nexport const ContactName = styled.span`\n  margin-right: 16px;\n`;\n\nexport const ContactPhone = styled.span`\n  margin-right: 16px;\n`;\n\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from 'components/';\n\nimport {\n  StyledListItem,\n  ContactName,\n  ContactPhone,\n  Contact,\n} from './StyledListItem';\n\nconst ListItem = props => {\n  const handleDel = () => props.handleDel(props.id);\n\n  return (\n    <StyledListItem>\n      <Contact>\n        <ContactName>\n          <FontAwesomeIcon icon={faUser} />\n          {props.contact}\n        </ContactName>\n\n        <ContactPhone>\n          <FontAwesomeIcon icon={faPhone} />\n          {props.phone}\n        </ContactPhone>\n      </Contact>\n      <Button type=\"button\" onClick={handleDel}>\n        Delete\n      </Button>\n    </StyledListItem>\n  );\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\n","import ListItem from './ListItem/ListItem';\n\nimport { StyledList } from './ContactsList.styled';\n\nconst ContactsList = ({ contacts, handleDel }) => {\n  return (\n    <StyledList>\n      {contacts.map(contact => (\n        <ListItem\n          key={contact.id}\n          id={contact.id}\n          contact={contact.name}\n          phone={contact.phone}\n          handleDel={handleDel}\n        />\n      ))}\n    </StyledList>\n  );\n};\n\nexport { ContactsList };\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n`;","import { Component } from 'react';\nimport { v4 as uid } from 'uuid';\n\nimport initialContacts from './data/initialContacts.json';\n\nimport {\n  ContactFilter,\n  Section,\n  ContactInputForm,\n  ContactsList,\n  Container,\n} from './components/';\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  addNewContact = newContact => {\n    this.setState(prevState => {\n      const contactNameAlreadyExist = this.state.contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      );\n\n      if (contactNameAlreadyExist) {\n        alert(`${newContact.name} is already in contacts!`);\n        return;\n      }\n\n      const newContactList = {\n        contacts: [...prevState.contacts, { ...newContact, id: uid() }],\n      };\n\n      return { ...prevState, ...newContactList };\n    });\n  };\n\n  setFilter = nameToFilter => {\n    this.setState(prevState => {\n      return { ...prevState, filter: nameToFilter };\n    });\n  };\n\n  deleteContact = contactId => {\n    const filteredArray = this.state.contacts.filter(\n      contact => contact.id !== contactId,\n    );\n    this.setState(prevState => {\n      return { ...prevState, contacts: filteredArray };\n    });\n  };\n\n  filterContacts = () =>\n    this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter),\n    );\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Container>\n            <ContactInputForm onSubmit={this.addNewContact} />\n          </Container>\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Container>\n            <ContactFilter\n              contacts={this.state.contacts}\n              onFilter={this.setFilter}\n            />\n\n            <ContactsList\n              contacts={filteredContacts}\n              handleDel={this.deleteContact}\n            />\n          </Container>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}
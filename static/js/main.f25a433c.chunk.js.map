{"version":3,"sources":["components/ContactsList/StyledComponents.jsx","components/ContactsList/ListItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactInputForm/StyledComponents.jsx","components/ContactInputForm/ContactInputForm.jsx","components/ContactFilter/StyledComponrnts.jsx","components/ContactFilter/ContactFilter.js","components/Section/StyledComponents.jsx","components/Section/Section.jsx","components/Container.jsx","App.js","index.js"],"names":["StyledList","styled","ul","ListItem","props","contact","phone","type","onClick","handleDel","id","ContactsList","state","contacts","this","length","setState","prevState","filter","name","toLowerCase","includes","map","Component","StyledContactInputForm","form","ContactInputForm","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","reset","pattern","title","required","onChange","StyledContactFilter","div","ContactFilter","sendFilterQueryToApp","debounce","onFilter","trim","StyledSection","section","Title","h2","Section","children","Container","App","initialContacts","addNewContact","newContact","find","uuidv4","newContactList","alert","setFilter","nameToFilter","contactId","filteredArray","ReactDom","render","StrictMode","document","querySelector"],"mappings":"8fAEaA,EAAaC,IAAOC,GAAV,yD,OCiBRC,EAjBE,SAACC,GAIhB,OACE,+BACIA,EAAMC,QACND,EAAME,MACR,wBACEC,KAAK,SACLC,QARY,kBAAMJ,EAAMK,UAAUL,EAAMM,KAM1C,wBCmDUC,E,4MAvDdC,MAAQ,CACNC,SAAU,EAAKT,MAAMS,U,wDAGvB,WAAsB,IAAD,OACfC,KAAKF,MAAMC,SAASE,SAAWD,KAAKV,MAAMS,SAASE,QACrDD,KAAKE,UAAS,SAACC,GACb,OAAO,2BAAKA,GAAc,CAACJ,SAAU,EAAKT,MAAMS,gB,oBA+BtD,WAAU,IAAD,OACP,OACE,cAACb,EAAD,UACIc,KAAKF,MAAMC,SAASK,QAAO,SAAAb,GAAO,OAAIA,EAAQc,KAAKC,cAAcC,SAAS,EAAKjB,MAAMc,WAASI,KAAI,SAAAjB,GAAO,OACzG,cAAC,EAAD,CAEEK,GAAIL,EAAQK,GACZL,QAASA,EAAQc,KACjBb,MAAOD,EAAQC,MACfG,UAAW,EAAKL,MAAMK,WAJjBJ,EAAQK,a,GA5CEa,a,OCHdC,EAAyBvB,IAAOwB,KAAV,8BCqEnBC,E,4MAlEdd,MAAQ,CACNO,KAAM,GACNb,MAAO,I,EAGTqB,aAAe,SAACC,GACd,MAAuBA,EAAEC,OAAjBV,EAAR,EAAQA,KAAKW,EAAb,EAAaA,MACb,EAAKd,SAAL,eAAiBG,EAAOW,K,EAG1BC,aAAe,SAACH,GACdA,EAAEI,iBAEF,EAAK5B,MAAM6B,SAAS,EAAKrB,OACzB,EAAKsB,S,EAGPA,MAAQ,WACN,EAAKlB,SAAS,CACZG,KAAM,GACNb,MAAO,M,4CAKX,WACE,OACE,eAACkB,EAAD,CACES,SAAUnB,KAAKiB,aADjB,UAGE,yCAEE,uBACExB,KAAK,OACLY,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRP,MAAOhB,KAAKF,MAAMO,KAClBmB,SAAUxB,KAAKa,kBAInB,2CAEE,uBACEpB,KAAK,MACLY,KAAK,QACLgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRP,MAAOhB,KAAKF,MAAMN,MAClBgC,SAAUxB,KAAKa,kBAInB,wBACEpB,KAAK,SADP,wB,GAzDuBgB,a,iBCFlBgB,EAAsBtC,IAAOuC,IAAV,uDCwBjBC,EArBO,SAAArC,GAEpB,IAAMsC,EAAuBC,IAASvC,EAAMwC,SAAU,KAMpD,OACE,eAACL,EAAD,WACE,uDACA,uBACEhC,KAAK,OACLY,KAAK,SACLW,MAAO1B,EAAMc,OACboB,SAXe,SAACV,GACtBc,EAAqBd,EAAEC,OAAOC,MAAMV,cAAcyB,eCRzCC,EAAgB7C,IAAO8C,QAAV,wEAKbC,EAAQ/C,IAAOgD,GAAV,0CCMHC,EAVC,SAAC,GAAyB,IAAvBd,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACxB,OACE,eAACL,EAAD,WACE,cAACE,EAAD,UAASZ,IACPe,MCLKC,EAAYnD,IAAOuC,IAAV,0FCqFPa,E,4MAxEbzC,MAAQ,CACNC,SAAUyC,EACVpC,OAAQ,I,EAGVqC,cAAgB,SAAAC,GACd,EAAKxC,UAAS,SAAAC,GAKZ,IAFgC,EAAKL,MAAMC,SAAS4C,MADzB,SAAApD,GAAO,OAAIA,EAAQc,KAAKC,gBAAkBoC,EAAWrC,KAAKC,iBAGrF,CAKAoC,EAAW9C,GAAKgD,cAChB,IAAMC,EAAiB,CAAC9C,SAAS,GAAD,mBAAOI,EAAUJ,UAAjB,CAA2B2C,KAE3D,OAAO,2BAAKvC,GAAe0C,GAPzBC,MAAM,GAAD,OAAIJ,EAAWrC,KAAf,iC,EAWX0C,UAAY,SAAAC,GACV,EAAK9C,UAAS,SAAAC,GACZ,OAAO,2BAAKA,GAAZ,IAAuBC,OAAQ4C,Q,EAInCrD,UAAY,SAAAsD,GACV,IAAMC,EAAgB,EAAKpD,MAAMC,SAASK,QAAO,SAAAb,GAAO,OAAIA,EAAQK,KAAOqD,KAC3E,EAAK/C,UAAS,SAAAC,GAEZ,OAAO,2BAAKA,GAAZ,IAAuBJ,SAAUmD,Q,4CAIrC,WACE,OACE,qCACE,cAAC,EAAD,CAAS5B,MAAM,YAAf,SACE,cAACgB,EAAD,UACE,cAAC,EAAD,CAAkBnB,SAAUnB,KAAKyC,oBAIrC,cAAC,EAAD,CAASnB,MAAM,WAAf,SACE,eAACgB,EAAD,WACE,cAAC,EAAD,CACEvC,SAAUC,KAAKF,MAAMC,SACrB+B,SAAU9B,KAAK+C,YASf,cAAC,EAAD,CACEhD,SAAUC,KAAKF,MAAMC,SACrBJ,UAAWK,KAAKL,UAChBS,OAAQJ,KAAKF,MAAMM,qB,GA/DjBK,aCTlB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.f25a433c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\n","import React from \"react\";\n\nconst ListItem = (props) => {\n\n  const handleDel = () => props.handleDel(props.id);\n\n  return (\n    <li>\n      { props.contact }\n      { props.phone }\n      <button\n        type=\"button\"\n        onClick={ handleDel }\n      >\n        Delete\n      </button>\n    </li>)\n}\n\nexport default ListItem;","import React, { Component } from 'react';\n\nimport { StyledList } from './StyledComponents';\nimport ListItem from \"./ListItem\";\n\nclass ContactsList extends Component {\n  state = {\n    contacts: this.props.contacts,\n  }\n\n  componentDidUpdate() {\n    if (this.state.contacts.length !== this.props.contacts.length) {\n      this.setState((prevState) => {\n        return { ...prevState, ...{contacts: this.props.contacts}};\n      })\n    }\n  //\n  //   if (this.state.filter !== this.props.filter) {\n  //     this.setState((prevState) => {\n  //       return { ...prevState, ...{filter: this.props.filter}};\n  //     })\n  //\n  //     const FilteredContact = () => {\n  //       const { contacts, filter } = this.state;\n  //\n  //       console.log(\"FilteredContact\");\n  //       const filteredArray = contacts.filter(contact => {\n  //\n  //         console.log(contact.name.toLowerCase());\n  //         console.log(contact.name.toLowerCase().includes(filter));\n  //         return contact.name.toLowerCase().includes(filter);\n  //       });\n  //\n  //       console.log(filteredArray);\n  //       return filteredArray;\n  //     }\n  //\n  //     console.log(FilteredContact());\n  //     this.setState((prevState) => {\n  //       return { ...prevState, ...{contacts: FilteredContact()}};\n  //     })\n  //   }\n  }\n\n  render() {\n    return (\n      <StyledList>\n        { this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.props.filter)).map(contact => (\n          <ListItem\n            key={contact.id}\n            id={contact.id}\n            contact={contact.name}\n            phone={contact.phone}\n            handleDel={this.props.handleDel}\n          />\n        ))}\n      </StyledList>\n    )\n  }\n}\n\nexport  default ContactsList;","import styled from 'styled-components';\n\nexport const StyledContactInputForm = styled.form `\n\n`;\n\n","import React, { Component } from 'react';\n\nimport { StyledContactInputForm } from './StyledComponents';\n\nclass ContactInputForm extends Component {\n  state = {\n    name: '',\n    phone: ''\n  }\n\n  handleChange = (e) => {\n    const { name,value } = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e)=> {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState({\n      name: '',\n      phone: ''\n    })\n  }\n\n\n  render() {\n    return (\n      <StyledContactInputForm\n        onSubmit={this.handleSubmit}\n      >\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.phone}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </StyledContactInputForm>\n    )\n  }\n}\n\nexport  default ContactInputForm;","import styled from \"styled-components\";\n\nexport const StyledContactFilter = styled.div`\n  background-color: aqua;\n`;","// import React, { Component } from \"react\";\nimport debounce from 'lodash.debounce'\n\nimport { StyledContactFilter } from './StyledComponrnts'\n\nconst ContactFilter = props => {\n\n  const sendFilterQueryToApp = debounce(props.onFilter, 300);\n\n  const onFilterChange = (e) => {\n    sendFilterQueryToApp(e.target.value.toLowerCase().trim());\n  }\n\n    return (\n      <StyledContactFilter>\n        <h3>Find contacts by name</h3>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={props.filter}\n          onChange={onFilterChange}\n        />\n      </StyledContactFilter>\n    )\n}\n\nexport default ContactFilter;","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  margin-top: 60px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  color:red;\n`;","import React from 'react';\nimport { StyledSection, Title } from './StyledComponents';\n\nconst Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <Title>{ title }</Title>\n      { children }\n    </StyledSection>\n  )\n\n};\n\nexport default Section;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n`;","import initialContacts from './data/initialContacts.json'\n\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactsList from './components/ContactsList'\nimport ContactInputForm from './components/ContactInputForm'\nimport ContactFilter from './components/ContactFilter'\n// import FilteredContact from './components/FilteredContact';\nimport Section from './components/Section'\nimport { Container } from './components';\n\n// const initialContacts = initialContacts;\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: ''\n  };\n\n  addNewContact = newContact => {\n    this.setState(prevState => {\n\n      const isNameAlreadyExist = contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      const contactNameAlreadyExist = this.state.contacts.find(isNameAlreadyExist)\n\n      if (contactNameAlreadyExist) {\n        alert(`${newContact.name} is already in contacts!`);\n        return\n      }\n\n      newContact.id = uuidv4();\n      const newContactList = {contacts: [ ...prevState.contacts, newContact]}\n\n      return { ...prevState , ...newContactList }\n    });\n  };\n\n  setFilter = nameToFilter => {\n    this.setState(prevState => {\n      return { ...prevState, filter: nameToFilter}\n    })\n  }\n\n  handleDel = contactId => {\n    const filteredArray = this.state.contacts.filter(contact => contact.id !== contactId);\n    this.setState(prevState => {\n\n      return { ...prevState, contacts: filteredArray}\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Section title='Phonebook'>\n          <Container>\n            <ContactInputForm onSubmit={this.addNewContact}/>\n          </Container>\n        </Section>\n\n        <Section title='Contacts'>\n          <Container>\n            <ContactFilter\n              contacts={this.state.contacts}\n              onFilter={this.setFilter}\n            />\n\n              {/*<FilteredContact*/}\n              {/*  contacts={this.state.contacts}*/}\n              {/*  name={this.state.name}*/}\n              {/*/>*/}\n\n\n              <ContactsList\n                contacts={this.state.contacts}\n                handleDel={this.handleDel}\n                filter={this.state.filter}\n              />\n\n          </Container>\n        </Section>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}